<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="4" hostname="844423c46a5c" name="pytest" skipped="0" tests="46" time="3.323" timestamp="2020-03-13T13:35:47.396433"><testcase classname="tests.unit.test_aioattributes" file="tests/unit/test_aioattributes.py" line="73" name="test_event[change_attr]" time="0.466"><failure message="RuntimeError: Task &lt;Task pending coro=&lt;test_event() running at /app/tests/unit/test_aioattributes.py:79&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop">event_type = &apos;change_attr&apos;

    @pytest.mark.asyncio
    async def test_event(event_type):  # &amp;event_loop, event_device):
        port = get_open_port()
        context = DeviceTestContext(EventDevice, port=port, process=True)
        with context:
&gt;           event_device = await asyncio_DeviceProxy(context.get_device_access())
E           RuntimeError: Task &lt;Task pending coro=&lt;test_event() running at /app/tests/unit/test_aioattributes.py:79&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop

tests/unit/test_aioattributes.py:79: RuntimeError</failure><system-out>Ready to accept request
</system-out><system-err>Can&apos;t create notifd event supplier. Notifd event not available
</system-err></testcase><testcase classname="tests.unit.test_aioattributes" file="tests/unit/test_aioattributes.py" line="73" name="test_event[periodic_attr]" time="0.209"><failure message="RuntimeError: Task &lt;Task pending coro=&lt;test_event() running at /app/tests/unit/test_aioattributes.py:79&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop">event_type = &apos;periodic_attr&apos;

    @pytest.mark.asyncio
    async def test_event(event_type):  # &amp;event_loop, event_device):
        port = get_open_port()
        context = DeviceTestContext(EventDevice, port=port, process=True)
        with context:
&gt;           event_device = await asyncio_DeviceProxy(context.get_device_access())
E           RuntimeError: Task &lt;Task pending coro=&lt;test_event() running at /app/tests/unit/test_aioattributes.py:79&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop

tests/unit/test_aioattributes.py:79: RuntimeError</failure><system-out>Ready to accept request
</system-out><system-err>Can&apos;t create notifd event supplier. Notifd event not available
</system-err></testcase><testcase classname="tests.unit.test_aioattributes" file="tests/unit/test_aioattributes.py" line="73" name="test_event[polled_attr]" time="0.203"><failure message="RuntimeError: Task &lt;Task pending coro=&lt;test_event() running at /app/tests/unit/test_aioattributes.py:79&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop">event_type = &apos;polled_attr&apos;

    @pytest.mark.asyncio
    async def test_event(event_type):  # &amp;event_loop, event_device):
        port = get_open_port()
        context = DeviceTestContext(EventDevice, port=port, process=True)
        with context:
&gt;           event_device = await asyncio_DeviceProxy(context.get_device_access())
E           RuntimeError: Task &lt;Task pending coro=&lt;test_event() running at /app/tests/unit/test_aioattributes.py:79&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop

tests/unit/test_aioattributes.py:79: RuntimeError</failure><system-out>Ready to accept request
</system-out><system-err>Can&apos;t create notifd event supplier. Notifd event not available
</system-err></testcase><testcase classname="tests.unit.test_aioattributes" file="tests/unit/test_aioattributes.py" line="95" name="test_multiple_source" time="0.215"><failure message="RuntimeError: Task &lt;Task pending coro=&lt;test_multiple_source() running at /app/tests/unit/test_aioattributes.py:101&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop">@pytest.mark.asyncio
    async def test_multiple_source():  # &amp;event_loop, event_device):
        port = get_open_port()
        context = DeviceTestContext(EventDevice, port=port, process=True)
        with context:
&gt;           event_device = await asyncio_DeviceProxy(context.get_device_access())
E           RuntimeError: Task &lt;Task pending coro=&lt;test_multiple_source() running at /app/tests/unit/test_aioattributes.py:101&gt; cb=[_run_until_complete_cb() at /usr/lib/python3.7/asyncio/base_events.py:158]&gt; got Future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at /usr/lib/python3.7/asyncio/futures.py:348]&gt; attached to a different loop

tests/unit/test_aioattributes.py:101: RuntimeError</failure><system-out>Ready to accept request
</system-out><system-err>Can&apos;t create notifd event supplier. Notifd event not available
</system-err></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="155" name="test_device_proxy_constructed_correctly" time="0.005"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="171" name="test_that_when_subscribe_is_switched_off_the_attribute_polling_is_not_attempted" time="0.011"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="195" name="test_subscribe_to_change_events_first" time="0.005"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="216" name="test_subscribe_to_periodic_events_if_change_events_not_available" time="0.005"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="243" name="test_subscribe_falls_back_to_polling_when_events_unavailable" time="0.008"><system-err>ERROR:asyncio:Task was destroyed but it is pending!
task: &lt;Task pending coro=&lt;Attribute._start_polling_task.&lt;locals&gt;.poll_coro() running at /app/tangogql/aioattribute/attribute.py:94&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x7f19516d9228&gt;()]&gt;&gt;
</system-err></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="274" name="test_listener_notified_on_event_reception" time="0.010"><system-err>ERROR:root:domain/family/member Event error: 
&lt;MagicMock spec=&apos;EventData&apos; id=&apos;139746715036920&apos;&gt;
</system-err></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="297" name="test_listener_still_notified_on_event_error" time="0.006"><system-err>ERROR:root:domain/family/member Event error: 
&lt;MagicMock spec_set=&apos;EventData&apos; id=&apos;139746714976664&apos;&gt;
</system-err></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="317" name="test_unsubscribed_listener_not_notified_on_event_reception" time="0.007"><system-err>ERROR:root:domain/family/member Event error: 
&lt;MagicMock spec=&apos;EventData&apos; id=&apos;139746716241144&apos;&gt;
</system-err></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="342" name="test_unsubscribed_listener_not_notified_on_polling" time="0.008"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="370" name="test_polling_loop_operates_in_background" time="0.006"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="417" name="test_polling_loop_stops_when_all_listeners_unsubscribe" time="0.008"></testcase><testcase classname="tests.unit.test_attribute" file="tests/unit/test_attribute.py" line="453" name="test_polling_loop_continues_when_listeners_remain" time="0.014"></testcase><testcase classname="tests.unit.test_feature_flags" file="tests/unit/test_feature_flags.py" line="8" name="test_that_feature_flags_can_be_initialised" time="0.002"></testcase><testcase classname="tests.unit.test_feature_flags" file="tests/unit/test_feature_flags.py" line="16" name="test_that_feature_flags_can_be_set" time="0.003"></testcase><testcase classname="tests.unit.test_feature_flags" file="tests/unit/test_feature_flags.py" line="22" name="test_that_feature_flags_are_only_initialised_once" time="0.003"></testcase><testcase classname="tests.unit.test_mutations" file="tests/unit/test_mutations.py" line="62" name="test_can_extract_name_from_info_block" time="0.002"></testcase><testcase classname="tests.unit.test_mutations" file="tests/unit/test_mutations.py" line="75" name="test_basic_execute_device_command_mutate_works" time="0.003"></testcase><testcase classname="tests.unit.test_mutations" file="tests/unit/test_mutations.py" line="86" name="test_basic_set_device_attribute_value_mutate_works" time="0.003"></testcase><testcase classname="tests.unit.test_mutations" file="tests/unit/test_mutations.py" line="97" name="test_basic_put_device_property_mutate_works" time="0.002"></testcase><testcase classname="tests.unit.test_mutations" file="tests/unit/test_mutations.py" line="107" name="test_basic_delete_device_property_mutate_works" time="0.002"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="63" name="test_device_resolve_name" time="0.006"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="69" name="test_device_resolve_single_name" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="75" name="test_device_resolve_state" time="0.005"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="82" name="test_device_resolve_properties" time="0.005"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="93" name="test_device_resolve_attributes" time="0.012"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="128" name="test_device_resolve_commands" time="0.007"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="148" name="test_device_resolve_server" time="0.006"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="159" name="test_device_resolve_class" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="165" name="test_device_resolve_pid" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="171" name="test_device_resolve_started_date" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestDeviceClass" file="tests/unit/test_schema.py" line="177" name="test_device_resolve_stopped_date" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestDomainClass" file="tests/unit/test_schema.py" line="188" name="test_domain_resolve_name" time="0.003"></testcase><testcase classname="tests.unit.test_schema.TestDomainClass" file="tests/unit/test_schema.py" line="196" name="test_domain_resolve_families" time="0.008"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="223" name="test_member_resolve_name" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="230" name="test_member_resolve_state" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="237" name="test_member_resolve_device_class" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="244" name="test_member_resolve_pid" time="0.005"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="251" name="test_member_resolve_started_date" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="258" name="test_member_resolve_stopped_date" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="265" name="test_member_resolve_exported" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="272" name="test_member_resolve_domain" time="0.004"></testcase><testcase classname="tests.unit.test_schema.TestMemberClass" file="tests/unit/test_schema.py" line="279" name="test_member_resolve_family" time="0.005"></testcase></testsuite></testsuites>